import logging
import asyncio
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler
from database import init_db
from telegram_handlers import get_handlers, error_handler
from tasks import check_discounts
from config import TOKEN, ADMIN_CHAT_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å)
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
    handlers=[
        logging.FileHandler("bot.log"), # –õ–æ–≥–∏ –≤ —Ñ–∞–π–ª
        logging.StreamHandler(),    # –õ–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)
logger = logging.getLogger(__name__)


async def post_init(app):
    # –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    logger.info("üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    await app.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text="üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
    )


async def force_check(update, context):
    #–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–∏–¥–æ–∫
    await check_discounts(context)
    await update.message.reply_text("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")


def main():
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    init_db()

    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
    application = ApplicationBuilder() \
        .token(TOKEN) \
        .post_init(post_init) \
        .build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_error_handler(error_handler)    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.job_queue.run_repeating(check_discounts, interval=20)  # –ö–∞–∂–¥—ã–π —á–∞—Å / 20 —Å–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –≤ –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    for handler in get_handlers():
        application.add_handler(handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    application.add_handler(CommandHandler("forcecheck", force_check))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
    application.run_polling()


if __name__ == "__main__":
    main()